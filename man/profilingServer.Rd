% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/app_module_profiling.R
\name{profilingServer}
\alias{profilingServer}
\title{Module: Server functions specific to metabolite profiling and profiling result generation}
\usage{
profilingServer(id, xpmt_data, ref_data)
}
\arguments{
\item{id}{A string denoting the namespace id.}

\item{xpmt_data}{A reactive object containing experimental NMR data and associated metadata.}

\item{ref_data}{A reactive object containing target metabolite data, after having been edited.}
}
\value{
A reactive object containing a list of two elements. The first element of this list, final_output, is the
output of rDolphin's profiling procedure. The second element of the list, reproducibility_data, is some other component
generated by rDolphin's profiling procedure. For details, refer to rDolhpin's documentation and/or git repo.
}
\description{
Copyright (C) 2022 Battelle Memorial Institute

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License along
 with this program; if not, write to the Free Software Foundation, Inc.,
 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
}
\details{
This is the server component for the module created to handle all functions related to profiling
of experimental data, based on user edits to the fitting parameters of a pre-specified list of
reference (target) metabolites. The value provided for 'id' should be identical across the following:
profiling_quant_sidebarUI(), profiling_prequantUI(), profiling_completeviewUI(), profiling_detailedviewUI(),
and profilingServer().

This module component provides the back-end code that:
1) Allows for final editing of global profiling paramters, and displays metabolite data aggregated into ROIs
2) Performs the profiling for all target metabolites for all sample spectra
3) Generates plots and table(s) used to visualize and summarize the profiling results
}
